threagile_version: 1.0.0

# NOTE:
#
# For a perfect editing experience within your IDE of choice you can easily
# get model syntax validation and autocompletion (very handy for enum values)
# as well as live templates: Just import the schema.json into your IDE and assign
# it as "schema" to each Threagile YAML file. Also try to import individual parts
# from the live-templates.txt file into your IDE as live editing templates.
#
# You might also want to try the REST API when running in server mode...


# This is only a stub for simple quick editing and is not complete.
# For a complete usable example model see the "-create-example-model" option.

title:  SAPL.io


date: 2023-11-14

author:
  name: mb
  homepage: sapl.io


management_summary_comment: >
  Simple flexible and dynamic attribute based access-control (ABAC).
  The reactive open source engine to bring ABAC to you applications supporting steams of attributes for efficient interactive real-time access control.

business_criticality: mission-critical # values: archive, operational, important, critical, mission-critical



business_overview:
  description: SAPL, or the Streaming Attribute Policy Language, is an open-source implementation of the Attribute-based access control (ABAC) paradigm. SAPL comes with an expressive policy language, policy engine, authorization servers, and framework integrations. SAPL extends the basic ABAC paradigm by following a publish-subscribe pattern instead of the traditional request-response pattern used in most ABAC implementations. So more precisely, SAPL implements Attribute stream-based access control (ASBAC).
  images:


technical_overview:
  description:
  images:



questions:



abuse_cases:



security_requirements:



# Tags can be used for anything, it's just a tag. Also risk rules can act based on tags if you like.
# Tags can be used for example to name the products used (which is more concrete than the technology types that only specify the type)
tags_available:
  - spring-boot
  - spring-security
  - sapl-spring-pdp-embedded
  - sapl-webflux-endpoint
  - sapl-jwt
  - windows-server




data_assets:

  Patient Data:
    id: patient-data
    description: Patient Data stored on hard drive
    usage: business # values: business, devops
    tags:
    origin: Patient
    owner:
    quantity: many # values: very-few, few, many, very-many
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: operational # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      Very sensitive data

  Policies:
    id: policies
    description: Policies for authorization decisions
    usage: business # values: business, devops
    tags:
    origin: business
    owner:
    quantity: few # values: very-few, few, many, very-many
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: mission-critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      Very important and highly sensitive data

  Access-Request:
    id: access-request
    description: request by PEP to PDP
    usage: business # values: business, devops
    tags:
    origin: PEP
    owner:
    quantity: very-many # values: very-few, few, many, very-many
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: mission-critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      Very important and highly sensitive data

  Access-Decision:
    id: access-decision
    description: response by PDP to PEP
    usage: business # values: business, devops
    tags:
    origin: PDP
    owner:
    quantity: very-many # values: very-few, few, many, very-many
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: mission-critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      Very important and highly sensitive data

technical_assets:


  Customer Web Client:
    id: customer-client
    description: Customer Web Client
    type: external-entity # values: external-entity, process, datastore
    usage: business # values: business, devops
    used_as_client_by_human: true
    out_of_scope: true
    justification_out_of_scope: Owned and managed by enduser customer
    size: component # values: system, service, application, component
    technology: browser # values: see help
    tags:
    internet: false
    machine: physical # values: physical, virtual, container, serverless
    encryption: none # values: none, transparent, data-with-symmetric-shared-key, data-with-asymmetric-shared-key, data-with-enduser-individual-key
    owner: Customer
    confidentiality: internal # values: public, internal, restricted, confidential, strictly-confidential
    integrity: operational # values: archive, operational, important, critical, mission-critical
    availability: operational # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      The client used by the customer to access the system.
    multi_tenant: false
    redundant: false
    custom_developed_parts: false
    data_assets_processed: # sequence of IDs to reference
      - patient-data
    data_assets_stored: # sequence of IDs to reference
    data_formats_accepted: # sequence of formats like: json, xml, serialization, file, csv
    communication_links:
      Customer Traffic:
        target: sapl-mvc
        description: Link to the mvc-app
        protocol: https # values: see help
        authentication: credentials # values: none, credentials, session-id, token, client-certificate, two-factor
        authorization: enduser-identity-propagation # values: none, technical-user, enduser-identity-propagation
        tags:
        vpn: false
        ip_filtered: false
        readonly: false
        usage: business # values: business, devops
        data_assets_sent: # sequence of IDs to reference
          - patient-data
        data_assets_received: # sequence of IDs to reference
          - patient-data
        #diagram_tweak_weight: 1
        #diagram_tweak_constraint: false

  SAPL MVC:
    id: sapl-mvc
    description: Spring-Boot MVC Webserver
    type: process # values: external-entity, process, datastore
    usage: business # values: business, devops
    used_as_client_by_human: false
    out_of_scope: false
    justification_out_of_scope:
    size: application # values: system, service, application, component
    technology: web-server # values: see help
    tags:
      - spring-boot
    internet: false
    machine: virtual # values: physical, virtual, container, serverless
    encryption: none # values: none, transparent, data-with-symmetric-shared-key, data-with-asymmetric-shared-key, data-with-enduser-individual-key
    owner:
    confidentiality: internal # values: public, internal, restricted, confidential, strictly-confidential
    integrity: critical # values: archive, operational, important, critical, mission-critical
    availability: critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      The correct configuration and reachability of the web server is mandatory for all usages of the portal.
    multi_tenant: false
    redundant: false
    custom_developed_parts: true
    data_assets_processed: # sequence of IDs to reference
      - patient-data
    data_assets_stored: # sequence of IDs to reference
      - patient-data
    data_formats_accepted: # sequence of formats like: json, xml, serialization, file, csv
      - json
    communication_links:
      SAPL Server LT Traffic:
        target: sapl-server-lt
        description: Link to the SAPL Server LT
        protocol: https # values: see help
        authentication: credentials # values: none, credentials, session-id, token, client-certificate, two-factor
        authorization: technical-user # values: none, technical-user, enduser-identity-propagation
        tags:
        vpn: false
        ip_filtered: false
        readonly: false
        usage: business # values: business, devops
        data_assets_sent: # sequence of IDs to reference
          - access-request
        data_assets_received: # sequence of IDs to reference
          - access-decision


  SAPL Server LT:
    id: sapl-server-lt
    description: SAPL Server LT
    type: process # values: external-entity, process, datastore
    usage: business # values: business, devops
    used_as_client_by_human: false
    out_of_scope: false
    justification_out_of_scope:
    size: component # values: system, service, application, component
    technology: web-service-rest # values: see help
    tags:
      - spring-boot
      - spring-security
      - sapl-spring-pdp-embedded
      - sapl-webflux-endpoint
      - sapl-jwt
    internet: false
    machine: virtual # values: physical, virtual, container, serverless
    encryption: data-with-asymmetric-shared-key # values: none, transparent, data-with-symmetric-shared-key, data-with-asymmetric-shared-key, data-with-enduser-individual-key
    owner: https://github.com/heutelbeck
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: mission-critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: Central component for authorization
    multi_tenant: false
    redundant: false
    custom_developed_parts: true
    data_assets_processed: # sequence of IDs to reference
      - access-request
      - policies
    data_assets_stored: # sequence of IDs to reference
    data_formats_accepted: # sequence of formats like: json, xml, serialization, file, csv
      - json
    communication_links:
      Policy Filesystem Access:
        target: policy-fileserver
        description: Link to the file system
        protocol: smb # values: see help
        authentication: credentials # values: none, credentials, session-id, token, client-certificate, two-factor
        authorization: technical-user # values: none, technical-user, enduser-identity-propagation
        tags:
        vpn: false
        ip_filtered: false
        readonly: false
        usage: business # values: business, devops
        data_assets_sent: # sequence of IDs to reference
          - access-decision
        data_assets_received: # sequence of IDs to reference
          - policies
        #diagram_tweak_weight: 1
        #diagram_tweak_constraint: false

  Policy Fileserver:
    id: policy-fileserver
    description: NTFS-Filesystem to store policies
    type: datastore # values: external-entity, process, datastore
    usage: business # values: business, devops
    used_as_client_by_human: false
    out_of_scope: false
    justification_out_of_scope:
    size: component # values: system, service, application, component
    technology: file-server # values: see help
    tags:
      - windows-server
    internet: false
    machine: virtual # values: physical, virtual, container, serverless
    encryption: none # values: none, transparent, data-with-symmetric-shared-key, data-with-asymmetric-shared-key, data-with-enduser-individual-key
    owner:
    confidentiality: strictly-confidential # values: public, internal, restricted, confidential, strictly-confidential
    integrity: mission-critical # values: archive, operational, important, critical, mission-critical
    availability: mission-critical # values: archive, operational, important, critical, mission-critical
    justification_cia_rating: >
      Policiy-files are crucial for safe operation
    multi_tenant: false
    redundant: false
    custom_developed_parts: false
    data_assets_processed: # sequence of IDs to reference
    data_assets_stored: # sequence of IDs to reference
      - policies
    data_formats_accepted: # sequence of formats like: json, xml, serialization, file, csv
      - file
    communication_links:


trust_boundaries:
  Web DMZ:
    id: web-dmz
    description: MVC-DMZ
    type: network-on-prem # values: see help
    tags:
    technical_assets_inside: # sequence of IDs to reference
      - sapl-mvc
    trust_boundaries_nested: # sequence of IDs to reference
      - sapl-server-dmz
      - file-server-network

  SAPL-Server DMZ:
    id: sapl-server-dmz
    description: Authz-DMZ
    type: network-on-prem # values: see help
    tags:
    technical_assets_inside: # sequence of IDs to reference
      - sapl-server-lt
    trust_boundaries_nested: # sequence of IDs to reference

  File-Server Network:
    id: file-server-network
    description: File-Server Network
    type: network-on-prem # values: see help
    tags:
    technical_assets_inside: # sequence of IDs to reference
      - policy-fileserver
    trust_boundaries_nested: # sequence of IDs to reference




shared_runtimes: {}




individual_risk_categories: {} # used for adding custom manually identified risks







# NOTE:
# For risk tracking each risk-id needs to be defined (the string with the @ sign in it). These unique risk IDs
# are visible in the PDF report (the small grey string under each risk), the Excel (column "ID"), as well as the JSON responses.
# Some risk IDs have only one @ sign in them, while others multiple. The idea is to allow for unique but still speaking IDs.
# Therefore each risk instance creates its individual ID by taking all affected elements causing the risk to be within an @-delimited part.
# Using wildcards (the * sign) for parts delimited by @ signs allows to handle groups of certain risks at once. Best is to lookup the IDs
# to use in the created Excel file. Alternatively a model macro "seed-risk-tracking" is available that helps in initially
# seeding the risk tracking part here based on already identified and not yet handled risks.
risk_tracking:




#diagram_tweak_edge_layout: spline # values: spline, polyline, false, ortho (this suppresses edge labels), curved (this suppresses edge labels and can cause problems with edges)

#diagram_tweak_suppress_edge_labels: true
#diagram_tweak_layout_left_to_right: true
#diagram_tweak_nodesep: 2
#diagram_tweak_ranksep: 2
#diagram_tweak_invisible_connections_between_assets:
#  - tech-asset-source-id-A:tech-asset-target-id-B
#  - tech-asset-source-id-C:tech-asset-target-id-D
#diagram_tweak_same_rank_assets:
#  - tech-asset-source-id-E:tech-asset-target-id-F:tech-asset-source-id-G:tech-asset-target-id-H
#  - tech-asset-source-id-M:tech-asset-target-id-N:tech-asset-source-id-O
